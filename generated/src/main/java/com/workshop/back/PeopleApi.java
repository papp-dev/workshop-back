/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package com.workshop.back;

import io.swagger.annotations.*;
import java.util.List;
import java.util.Optional;
import javax.validation.Valid;
import javax.validation.constraints.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

@javax.annotation.Generated(
    value = "org.openapitools.codegen.languages.SpringCodegen",
    date = "2024-10-17T10:46:13.356676-03:00[America/Sao_Paulo]")
@Validated
@Api(value = "people", description = "the people API")
public interface PeopleApi {

  default Optional<NativeWebRequest> getRequest() {
    return Optional.empty();
  }

  /**
   * POST /people : Create a new person Create a new person
   *
   * @param personDto Create a new person (required)
   * @return successful operation (status code 200)
   */
  @ApiOperation(
      value = "Create a new person",
      nickname = "create",
      notes = "Create a new person",
      response = PersonResponseDto.class,
      tags = {
        "People actions",
      })
  @ApiResponses(
      value = {
        @ApiResponse(
            code = 200,
            message = "successful operation",
            response = PersonResponseDto.class)
      })
  @RequestMapping(
      method = RequestMethod.POST,
      value = "/people",
      produces = {"application/json"},
      consumes = {"application/json"})
  default ResponseEntity<PersonResponseDto> create(
      @ApiParam(value = "Create a new person", required = true) @Valid @RequestBody
          PersonDto personDto) {
    getRequest()
        .ifPresent(
            request -> {
              for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                  String exampleString =
                      "{ \"imcClassification\" : \"Under ideal weight\", \"name\" : \"Paulo\", \"weight\" : 60, \"imcIndex\" : 18.0, \"id\" : \"e043186e-871c-4146-886f-474a7660876e\", \"height\" : 1.75 }";
                  ApiUtil.setExampleResponse(request, "application/json", exampleString);
                  break;
                }
              }
            });
    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
  }

  /**
   * GET /people : Get list of person Get list of person
   *
   * @return successful operation (status code 200)
   */
  @ApiOperation(
      value = "Get list of person",
      nickname = "list",
      notes = "Get list of person",
      response = PersonResponseDto.class,
      responseContainer = "List",
      tags = {
        "People actions",
      })
  @ApiResponses(
      value = {
        @ApiResponse(
            code = 200,
            message = "successful operation",
            response = PersonResponseDto.class,
            responseContainer = "List")
      })
  @RequestMapping(
      method = RequestMethod.GET,
      value = "/people",
      produces = {"application/json"})
  default ResponseEntity<List<PersonResponseDto>> list() {
    getRequest()
        .ifPresent(
            request -> {
              for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                  String exampleString =
                      "{ \"imcClassification\" : \"Under ideal weight\", \"name\" : \"Paulo\", \"weight\" : 60, \"imcIndex\" : 18.0, \"id\" : \"e043186e-871c-4146-886f-474a7660876e\", \"height\" : 1.75 }";
                  ApiUtil.setExampleResponse(request, "application/json", exampleString);
                  break;
                }
              }
            });
    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
  }
}
