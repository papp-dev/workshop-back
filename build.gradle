import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.diffplug.spotless'  version '6.25.0'
	id 'org.openapi.generator' version '5.3.0'
}

group = 'com.workshop'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
	sourceCompatibility = JavaVersion.VERSION_21
}

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.34'
	implementation 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok:1.18.34'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
	implementation 'io.swagger.parser.v3:swagger-parser:2.1.22'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'com.google.googlejavaformat:google-java-format:1.24.0'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	java {
		googleJavaFormat('1.17.0')  // Replace with your desired version
	}
}
sourceSets {
	main {
		java {
			srcDir "${rootDir}/generated/src/main/java"
		}
	}
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/api-spec/schema/swagger-ref.json"
	outputDir = "$rootDir/generated"
	apiPackage = "com.workshop.back"
	modelPackage = "com.workshop.back"
	modelNameSuffix = "Dto"
	configOptions = [
			dateLibrary: "java8",
			interfaceOnly: "true",
			useSpringBoot3: "true",
			additionalModelTypeAnnotations: "@lombok.Builder @lombok.NoArgsConstructor @lombok.AllArgsConstructor"
	]
}


tasks.register('getDependencies', Copy) {
	from sourceSets.main.runtimeClasspath
	into 'runtime/'

	doFirst {
		def runtimeDir = file('runtime')
		runtimeDir.deleteDir()
		runtimeDir.mkdir()
	}

	doLast {
		file('runtime').deleteDir()
	}
}